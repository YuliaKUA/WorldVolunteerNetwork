// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorldVolunteerNetwork.Infrastructure.DbContexts;

#nullable disable

namespace WorldVolunteerNetwork.Infrastructure.Migrations.WorldVolunteerNetworkReadDb
{
    [DbContext(typeof(WorldVolunteerNetworkReadDbContext))]
    [Migration("20241024162207_InitialV3")]
    partial class InitialV3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.OrganizerReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("ActsBehalfCharitableOrganization")
                        .HasColumnType("boolean")
                        .HasColumnName("acts_behalf_charitable_organization");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("YearsVolunteeringExperience")
                        .HasColumnType("integer")
                        .HasColumnName("years_volunteering_experience");

                    b.HasKey("Id")
                        .HasName("pk_organizers");

                    b.ToTable("organizers", (string)null);
                });

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.PhotoReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("is_main");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("uuid")
                        .HasColumnName("organizer_id");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.HasKey("Id")
                        .HasName("pk_organizer_photos");

                    b.HasIndex("OrganizerId")
                        .HasDatabaseName("ix_organizer_photos_organizer_id");

                    b.ToTable("organizer_photos", (string)null);
                });

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.PostReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("DateCreate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_create");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Duration")
                        .HasColumnType("text")
                        .HasColumnName("duration");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("OrganizerId")
                        .HasColumnType("uuid")
                        .HasColumnName("organizer_id");

                    b.Property<float?>("Reward")
                        .HasColumnType("real")
                        .HasColumnName("reward");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<DateTimeOffset>("SubmissionDeadline")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("submission_deadline");

                    b.HasKey("Id")
                        .HasName("pk_posts");

                    b.HasIndex("OrganizerId")
                        .HasDatabaseName("ix_posts_organizer_id");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.OrganizerReadModel", b =>
                {
                    b.OwnsMany("WorldVolunteerNetwork.Infrastructure.ReadModels.SocialMediaReadModel", "SocialMedias", b1 =>
                        {
                            b1.Property<Guid>("OrganizerReadModelId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Link")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Social")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OrganizerReadModelId", "Id");

                            b1.ToTable("organizers");

                            b1.ToJson("social_medias");

                            b1.WithOwner()
                                .HasForeignKey("OrganizerReadModelId")
                                .HasConstraintName("fk_organizers_organizers_organizer_read_model_id");
                        });

                    b.Navigation("SocialMedias");
                });

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.PhotoReadModel", b =>
                {
                    b.HasOne("WorldVolunteerNetwork.Infrastructure.ReadModels.OrganizerReadModel", null)
                        .WithMany("Photos")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organizer_photos_organizers_organizer_id");
                });

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.PostReadModel", b =>
                {
                    b.HasOne("WorldVolunteerNetwork.Infrastructure.ReadModels.OrganizerReadModel", null)
                        .WithMany("Posts")
                        .HasForeignKey("OrganizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_posts_organizers_organizer_id");
                });

            modelBuilder.Entity("WorldVolunteerNetwork.Infrastructure.ReadModels.OrganizerReadModel", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
